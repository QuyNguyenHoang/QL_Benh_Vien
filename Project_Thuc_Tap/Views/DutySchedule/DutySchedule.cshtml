@model IEnumerable<Project_Thuc_Tap.Models.DutySchedule>

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<div class="container mt-4">
    <h2 class="mb-3">Quản lý lịch trực theo tuần</h2>

    <!-- Bộ lọc chọn tuần -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <div>
            <button class="btn btn-primary" id="prevWeek">&#60; Tuần trước</button>
            <button class="btn btn-primary" id="currentWeek">Tuần hiện tại</button>
            <button class="btn btn-primary" id="nextWeek">Tuần tới &#62;</button>
        </div>
        <input type="date" class="form-control w-25" id="datePicker" value="@ViewBag.SelectedDate">
        <a asp-action="CreateDutySchedule" class="me-2" title="Thêm mới">
            <img src="~/Icons/plus.png" alt="Thêm" width="24" height="24" style="vertical-align: middle;" />
        </a>
    </div>
    @if (TempData["UpdateDutyAccess"] != null)
    {
        <div id="updateAlert" class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["UpdateDutyAccess"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["DeleteDutyScheduleSuccess"] != null)
    {
        <div id="deleteAlert" class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["DeleteDutyScheduleSuccess"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["SuccessCreateDutySchedule"] != null)
    {
        <div id="createAlert" class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessCreateDutySchedule"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["DaGiaoViec"] != null)
    {
        <div id="createAlert" class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["DaGiaoViec"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Bảng lịch trực chi tiết theo ngày -->
    <table class="table table-bordered text-center">
        <thead class="table-light">
            <tr>
                <th>Ca trực</th>
                <th id="day1"></th>
                <th id="day2"></th>
                <th id="day3"></th>
                <th id="day4"></th>
                <th id="day5"></th>
                <th id="day6"></th>
                <th id="day7"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var shift in new[] { "Sáng", "Chiều", "Tối" })
            {
                <tr>
                    <td class="bg-warning fw-bold">@shift</td>

                    @for (int i = 0; i < 7; i++)
                    {
                        var currentDate = ViewBag.StartOfWeek.AddDays(i).Date;
                        var key = $"{currentDate:yyyy-MM-dd}_{shift}";

                        <td>
                            @if (ViewBag.GroupedSchedules.ContainsKey(key))
                            {
                                <div class="d-flex flex-wrap justify-content-center gap-2">
                                    @foreach (var employee in ViewBag.GroupedSchedules[key])
                                    {
                                        <!-- Thẻ nhân viên nhỏ gọn -->
                                        <div class="card p-2 text-center shadow-sm rounded position-relative employee-card"
                                             style="width: 150px; cursor: pointer;"
                                             data-name="@employee.FullName"
                                             data-phone="@employee.Phone"
                                             data-birthdate="@employee.BirthDate"
                                             data-avatar="@(string.IsNullOrEmpty(employee.Picture) ? "/Images/avatar-default.png" : $"/Images/{employee.Picture}")"
                                             data-email="@employee.Email"
                                             data-id="@(employee.id ?? "0")"
                                             data-description="@employee.Description"
                                             onclick="showDetails(this)">

                                            <div class="d-flex justify-content-center mb-1">
                                                <img src="@(string.IsNullOrEmpty(employee.Picture) ? "/Images/avatar-default.png" : $"/Images/{employee.Picture}")"
                                                     alt="Avatar của @employee.FullName"
                                                     class="rounded-circle"
                                                     style="width: 50px; height: 50px; object-fit: cover;">
                                            </div>

                                            <!-- Tên nhân viên -->
                                            <h6 class="fw-bold mb-1 text-primary">@employee.FullName</h6>
                                            <p class="text-muted">Ghi chú: @employee.Description</p>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <span class="text-muted fst-italic">Trống</span>
                            }
                        </td>
                    }
                </tr>
            }
        </tbody>

        <!-- Modal Chi tiết nhân viên (CHUYỂN RA NGOÀI VÒNG LẶP) -->
        <div id="employeeModal" class="modal fade" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content p-3 text-center">
                    <button type="button" class="btn-close ms-auto" data-bs-dismiss="modal" aria-label="Close"></button>

                    <img id="modalAvatar" class="rounded-circle mb-2" style="width: 100px; height: 100px; object-fit: cover;" />

                    <h5 id="modalName" class="fw-bold text-primary mb-1"></h5>
                    <div class="text-muted small mb-3 fst-italic" id="modalPosition"></div>

                    <!-- Thông tin chi tiết -->
                    <div class="text-start mb-3">
                        <p><strong>📞 Số điện thoại:</strong> <span id="modalPhone"></span></p>
                        <p><strong>📧 Email:</strong> <span id="modalEmail"></span></p>
                        <p><strong>📍 Địa chỉ:</strong> <span id="modalAddress"></span></p>
                        <p><strong>🎂 Ngày sinh:</strong> <span id="modalBirthDate"></span></p>
                        <p><strong>👥 Giới tính:</strong> <span id="modalGender"></span></p>
                        <p><strong>📝 Note:</strong> <span id="modalDescription"></span></p>
                    </div>

                    <!-- Nút sửa/xóa -->
                    <div class="d-flex justify-content-center gap-2">
                        <a id="editButton" class="text-danger" title="Sửa">
                            <img src="~/Icons/edit (1).png" alt="Edit" width="24" height="24" style="vertical-align: middle;" />
                        </a>

                        <a id="deleteButton" class="text-danger" title="Xóa" onclick="return confirm('Bạn có chắc chắn muốn xóa người dùng này không?');">
                            <img src="~/Icons/delete (1).png" alt="Delete" width="24" height="24" style="vertical-align: middle;" />
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Script mở modal + đổ dữ liệu (CẬP NHẬT LẠI) -->
        <script>
            function showDetails(card) {
                // Lấy dữ liệu từ data-* của thẻ card được bấm
                const name = card.getAttribute("data-name");
                const phone = card.getAttribute("data-phone");
                const birthDate = card.getAttribute("data-birthdate");
                const avatar = card.getAttribute("data-avatar");
                const email = card.getAttribute("data-email");
                const id = card.getAttribute("data-id");
                const description = card.getAttribute("data-description");

                // Đổ dữ liệu lên modal
                document.getElementById("modalName").innerText = name;
                document.getElementById("modalPhone").innerText = phone;
                document.getElementById("modalBirthDate").innerText = birthDate;
                document.getElementById("modalAvatar").src = avatar;
                document.getElementById("modalEmail").innerText = email || "Không có Email";
                document.getElementById("modalDescription").innerText = description;

                // Kiểm tra id hợp lệ mới tạo link
                if (id && id !== "0") {
                    document.getElementById("editButton").href = `/DutySchedule/EditDutySchedule?id=${id}`;
                    document.getElementById("deleteButton").href = `/DeleteDutySchedule?id=${id}`;
                } else {
                    document.getElementById("editButton").href = "#";
                    document.getElementById("deleteButton").href = "#";
                }

                // Hiển thị modal
                let modal = new bootstrap.Modal(document.getElementById('employeeModal'));
                modal.show();
            }
        </script>

    </table>
    <style>
        .employee-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }

        .modal-content {
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        }
    </style>

    <!-- Ghi chú màu sắc -->
    <div class="mt-3">
        <span class="badge bg-secondary">Lịch trực bình thường</span>
        <span class="badge bg-success">Lịch trực đặc biệt</span>
        <span class="badge bg-info">Trực online / linh hoạt</span>
        <span class="badge bg-danger">Lịch tạm ngưng</span>
    </div>
</div>

<script>
    const datePicker = document.getElementById('datePicker');
    const prevWeekBtn = document.getElementById('prevWeek');
    const nextWeekBtn = document.getElementById('nextWeek');
    const currentWeekBtn = document.getElementById('currentWeek');

    // Hàm cập nhật ngày trong tuần
    function updateWeekDisplay(startDate) {
        for (let i = 0; i < 7; i++) {
            const dayCell = document.getElementById(`day${i + 1}`);
            const date = new Date(startDate);
            date.setDate(startDate.getDate() + i);
            dayCell.innerHTML = `Thứ ${i + 2}<br>${date.toLocaleDateString('vi-VN')}`;
        }
    }


    datePicker.addEventListener('change', () => {
        const selectedDate = datePicker.value;
        window.location.href = `/DutySchedule/DutySchedule?selectedDate=${selectedDate}`;
    });

    // Xử lý nút tuần trước
    prevWeekBtn.addEventListener('click', () => {
        const currentDate = new Date(datePicker.value);
        currentDate.setDate(currentDate.getDate() - 7);
        datePicker.valueAsDate = currentDate;
        window.location.href = `/DutySchedule/DutySchedule?selectedDate=${currentDate.toISOString().split('T')[0]}`;
    });

    // Xử lý nút tuần tới
    nextWeekBtn.addEventListener('click', () => {
        const currentDate = new Date(datePicker.value);
        currentDate.setDate(currentDate.getDate() + 7);
        datePicker.valueAsDate = currentDate;
        window.location.href = `/DutySchedule/DutySchedule?selectedDate=${currentDate.toISOString().split('T')[0]}`;
    });

    // Xử lý nút quay lại tuần hiện tại
    currentWeekBtn.addEventListener('click', () => {
        const today = new Date();
        datePicker.valueAsDate = today;
        window.location.href = `/DutySchedule/DutySchedule?selectedDate=${today.toISOString().split('T')[0]}`;
    });

    // Khởi tạo bảng tuần hiện tại
    const startOfWeek = new Date(datePicker.value);
    startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay() + 1);
    updateWeekDisplay(startOfWeek);

</script>

<style>
    .container {
        max-width: 1200px;
        margin: auto;
        background: #f9f9f9;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
    }

    h2 {
        color: #4a4a4a;
        text-align: center;
        font-weight: bold;
    }

    table th, table td {
        vertical-align: middle;
        font-size: 16px;
        padding: 10px;
    }

    .bg-warning {
        background-color: #fff8c6 !important;
    }

    .bg-danger {
        background-color: #e74c3c !important;
    }

    .bg-success {
        background-color: #2ecc71 !important;
    }

    .bg-info {
        background-color: #3498db !important;
    }

    .badge {
        padding: 8px 12px;
        margin-right: 5px;
        font-size: 14px;
    }

    button.btn-sm {
        margin-left: 5px;
        font-size: 0.9rem;
    }
</style>
