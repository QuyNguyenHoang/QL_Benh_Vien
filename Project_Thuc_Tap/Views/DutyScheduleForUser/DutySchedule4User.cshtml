@{
    Layout = "~/Views/Shared/_LayoutForUser.cshtml";
}

<div class="container mt-4">
    <h2 class="mb-3 text-center text-danger">Quản lý lịch trực theo tuần</h2>

    <!-- Bộ lọc chọn tuần -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <div class="btn-group">
            <button class="btn btn-primary rounded-3" id="prevWeek">&#60; Tuần trước</button>
            <button class="btn btn-primary  rounded-3 mx-1" id="currentWeek">Tuần hiện tại</button>
            <button class="btn btn-primary rounded-3" id="nextWeek">Tuần tới &#62;</button>
        </div>
        <input type="date" class="form-control w-25" id="datePicker" value="@ViewBag.SelectedDate">
    </div>

    <!-- Bảng lịch trực chi tiết theo ngày -->
    <div class="table-responsive">
        <table class="table table-bordered table-striped text-center align-middle">
            <thead class="table-light">
                <tr>
                    <th>Ca trực</th>
                    <th id="day1"></th>
                    <th id="day2"></th>
                    <th id="day3"></th>
                    <th id="day4">T</th>
                    <th id="day5"></th>
                    <th id="day6"></th>
                    <th id="day7" style="color:red"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var shift in new[] { "Sáng", "Chiều", "Tối" })
                {
                    <tr>
                        <td class="bg-warning fw-bold">@shift</td>

                        @for (int i = 0; i < 7; i++)
                        {
                            var currentDate = ViewBag.StartOfWeek.AddDays(i).Date;
                            var key = $"{currentDate:yyyy-MM-dd}_{shift}";
                            bool hasCompensatory = ViewBag.Compensatory.ContainsKey(key);

                            <td style="vertical-align: top;">
                                <div class="d-flex flex-column align-items-center gap-2">

                                    @if (ViewBag.GroupedSchedules.ContainsKey(key))
                                    {
                                        // Hiển thị ca trực
                                        @foreach (var employee in ViewBag.GroupedSchedules[key])
                                        {
                                            <div class="card p-2 text-center shadow-sm rounded employee-card"
                                                 style="width: 150px; cursor: pointer;"
                                                 data-name="@employee.FullName"
                                                 data-phone="@employee.Phone"
                                                 data-avatar="@(string.IsNullOrEmpty(employee.Picture) ? "/Images/avatar-default.png" : $"/Images/{employee.Picture}")"
                                                 onclick="showDetails(this)">
                                                <div class="d-flex justify-content-center mb-1">
                                                    <img src="@(string.IsNullOrEmpty(employee.Picture) ? "/Images/avatar-default.png" : $"/Images/{employee.Picture}")"
                                                         alt="Avatar của @employee.FullName"
                                                         class="rounded-circle"
                                                         style="width: 50px; height: 50px; object-fit: cover;">
                                                </div>
                                                <h6 class="fw-bold mb-1 text-primary">@employee.FullName</h6>
                                                <p class="text-muted">Ghi chú: @employee.Description</p>

                                                @if (hasCompensatory)
                                                {
                                                    <span class="badge bg-danger">🔹Có nghỉ bù</span>
                                                }

                                                @if (employee.Status == false)
                                                {
                                                    <span class="badge bg-danger">Tạm ngưng</span>
                                                }

                                                @if (employee.IsOverTime == true)
                                                {
                                                    <span class=" badge bg-success">Làm thêm</span>
                                                }
                                                @if (employee.IsOverTime == null)
                                                {
                                                    <span class="bg-warning">Đang đợi duyệt làm thêm</span>
                                                }
                                            </div>
                                        }
                                    }
                                    else if (hasCompensatory)
                                    {
                                        // Nếu chỉ có nghỉ bù (không có ca trực), hiển thị bình thường
                                        @foreach (var leave in ViewBag.Compensatory[key])
                                        {
                                            <div class="card p-2 text-center shadow-sm rounded employee-card"
                                                 style="width: 150px; cursor: pointer; background-color: #ffebcc;"
                                                 data-name="@leave.FullName"
                                                 data-phone="@leave.Phone"
                                                 data-avatar="@leave.Picture"
                                                 onclick="showDetails(this)">
                                                <div class="d-flex justify-content-center mb-1">
                                                    <img src="@(string.IsNullOrEmpty(leave.Picture) ? "/Images/avatar-default.png" : $"/Images/{leave.Picture}")"
                                                         alt="Avatar của @leave.FullName"
                                                         class="rounded-circle"
                                                         style="width: 50px; height: 50px; object-fit: cover;">
                                                </div>
                                                <h6 class="fw-bold mb-1 text-danger">@leave.FullName</h6>
                                                <p class="text-muted">Nghỉ bù</p>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <div class="text-center text-muted" style="height: 50px; display: flex; align-items: center; justify-content: center;">
                                            Không có dữ liệu
                                        </div>
                                    }

                                </div>
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Ghi chú màu sắc -->
    <div class="mt-3">
        <span class="badge bg-secondary">Lịch trực bình thường</span>
        <span class="badge bg-success">Lịch trực đặc biệt</span>
        <span class="badge bg-info">Trực online / linh hoạt</span>
        <span class="badge bg-danger">Lịch tạm ngưng</span>
    </div>
</div>

<script>
    const datePicker = document.getElementById('datePicker');
    const prevWeekBtn = document.getElementById('prevWeek');
    const nextWeekBtn = document.getElementById('nextWeek');
    const currentWeekBtn = document.getElementById('currentWeek');

    // Hàm cập nhật ngày trong tuần
    function updateWeekDisplay(startDate) {
        for (let i = 0; i < 7; i++) {
            const dayCell = document.getElementById(`day${i + 1}`);
            const date = new Date(startDate);
            date.setDate(startDate.getDate() + i);

            // Xác định tên ngày trong tuần
            let dayName = i === 6 ? "Chủ Nhật" : `Thứ ${i + 2}`;

            // Cập nhật nội dung ô ngày
            dayCell.innerHTML = `${dayName}<br>${date.toLocaleDateString('vi-VN')}`;
        }
    }

    datePicker.addEventListener('change', () => {
        const selectedDate = datePicker.value;
        window.location.href = `/DutyScheduleForUser/DutySchedule4User?selectedDate=${selectedDate}`;
    });

    // Xử lý nút tuần trước
    prevWeekBtn.addEventListener('click', () => {
        const currentDate = new Date(datePicker.value);
        currentDate.setDate(currentDate.getDate() - 7);
        datePicker.valueAsDate = currentDate;
        window.location.href = `/DutyScheduleForUser/DutySchedule4User?selectedDate=${currentDate.toISOString().split('T')[0]}`;
    });

    // Xử lý nút tuần tới
    nextWeekBtn.addEventListener('click', () => {
        const currentDate = new Date(datePicker.value);
        currentDate.setDate(currentDate.getDate() + 7);
        datePicker.valueAsDate = currentDate;
        window.location.href = `/DutyScheduleForUser/DutySchedule4User?selectedDate=${currentDate.toISOString().split('T')[0]}`;
    });

    // Xử lý nút quay lại tuần hiện tại
    currentWeekBtn.addEventListener('click', () => {
        const today = new Date();
        datePicker.valueAsDate = today;
        window.location.href = `/DutyScheduleForUser/DutySchedule4User?selectedDate=${today.toISOString().split('T')[0]}`;
    });

    // Khởi tạo bảng tuần hiện tại
    const startOfWeek = new Date(datePicker.value);
    startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay() + 1);
    updateWeekDisplay(startOfWeek);

</script>
